# Задание-1:
# Матрицы в питоне реализуются в виде вложенных списков:
# Пример. Дано:

matrix = [[1, 0, 8],
          [3, 4, 1],
          [0, 4, 2]]

# Выполнить поворот (транспонирование) матрицы
# Пример. Результат:
# matrix_rotate = [[1, 3, 0],
#                  [0, 4, 4],
#                  [8, 1, 2]]

# Суть сложности hard: Решите задачу в одну строку

print('Задание 1')
# кручу-верчу, ниче делать не хочу
print([[matrix[j][i] for j in range(len(matrix[i]))] for i in range(len(matrix))])


# Задание-2:
# Найдите наибольшее произведение пяти любых цифр в 1000-значном числе.
# Выведите произведение и индекс смещения первого числа последовательных 5-ти цифр.
# Пример 1000-значного числа:
number = """
73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450"""

print('Задание 2')
# поиск максимального произведения из 5 последовательных символов
def max_value(number):
    max_v = 0
    index_max_v = 0
    max_number = ''
    number = number.replace('\n', '')
    for i, _ in enumerate(number):
        new_v = number[i:i+5]
        if len(new_v) > 5:
            continue
        _sum = 1
        for v in new_v:
            _sum = _sum * int(v)
        if _sum > max_v:
            max_v = _sum
            max_number = new_v
            index_max_v = i
    return (max_v, max_number, index_max_v)

result = max_value(number)
print(f'Максимальное произведение: {result[0]} \nПодходящая последовательность: {result[1]} \nИндекс: {result[2]}')